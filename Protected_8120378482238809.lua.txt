local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local PURPLE = Color3.fromRGB(170, 85, 255)
local STAR_LOGO = "rbxassetid://13420320686"

-- Check if obj is part of a GUI made by your script
local function isFromExecutedScript(obj)
	while obj and obj ~= CoreGui do
		if obj:GetAttribute("IgnoreForTheme") == true then
			return true
		end

		-- Exclude custom exploit UI names
		if obj:IsA("ScreenGui") and (
			obj.Name == "TwilightHub" or obj.Name == "DeltaUI" or obj.ResetOnSpawn == false
		) then
			return true
		end

		-- Exclude anything under PlayerGui
		if obj == LocalPlayer:FindFirstChild("PlayerGui") then
			return true
		end

		obj = obj.Parent
	end
	return false
end

-- Apply purple theme
local function applyTheme(obj)
	if isFromExecutedScript(obj) then return end

	pcall(function()
		if obj:IsA("TextLabel") or obj:IsA("TextBox") or obj:IsA("TextButton") then
			obj.TextColor3 = PURPLE

		elseif obj:IsA("ImageLabel") or obj:IsA("ImageButton") then
			if obj.Image and obj.Image ~= "" then
				local size = obj.AbsoluteSize
				if (size.X <= 200 and size.Y <= 200) then
					obj.ImageColor3 = PURPLE
				end

				if obj.Name:lower():find("logo") or obj.Image:lower():find("logo") then
					obj.Image = STAR_LOGO
					obj.ImageColor3 = PURPLE
					obj.BackgroundTransparency = 1
					obj.ScaleType = Enum.ScaleType.Fit
					obj.ZIndex = 10
				end
			end
		end
	end)
end

-- Apply to current Roblox UI
for _, obj in ipairs(CoreGui:GetDescendants()) do
	applyTheme(obj)
end

-- Recolor any new Roblox UI appearing
CoreGui.DescendantAdded:Connect(function(obj)
	task.defer(function()
		applyTheme(obj)
	end)
end)



-- Notification System with Slide Out Left Animation on Disappear

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local screenGui = CoreGui:FindFirstChild("QueuedNotifs") or Instance.new("ScreenGui")
screenGui.Name = "QueuedNotifs"
screenGui.ResetOnSpawn = false
screenGui.DisplayOrder = 99999
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.Parent = CoreGui

local holder = screenGui:FindFirstChild("Holder") or Instance.new("Frame", screenGui)
holder.Name = "Holder"
holder.AnchorPoint = Vector2.new(1, 1)
holder.Position = UDim2.new(1, -20, 1, -20)
holder.Size = UDim2.new(0, 320, 1, -40)
holder.BackgroundTransparency = 1
holder.ClipsDescendants = false

local layout = holder:FindFirstChild("UIListLayout") or Instance.new("UIListLayout", holder)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 8)
layout.VerticalAlignment = Enum.VerticalAlignment.Bottom

local themes = {
    success = {
        Color = Color3.fromRGB(0, 200, 120),
        Icon = "rbxassetid://122210153763945", -- Check Circle
        TextColor = Color3.fromRGB(255, 255, 255),
        AccentColor = Color3.fromRGB(0, 255, 150)
    },
    error = {
        Color = Color3.fromRGB(255, 80, 80),
        Icon = "rbxassetid://7733658504", -- X Circle
        TextColor = Color3.fromRGB(255, 240, 240),
        AccentColor = Color3.fromRGB(255, 120, 120)
    },
    warning = {
        Color = Color3.fromRGB(255, 170, 0),
        Icon = "rbxassetid://6031071050",
        TextColor = Color3.fromRGB(255, 250, 220),
        AccentColor = Color3.fromRGB(255, 200, 100)
    },
    info = {
        Color = Color3.fromRGB(40, 160, 255),
        Icon = "rbxassetid://6031075938",
        TextColor = Color3.fromRGB(230, 240, 255),
        AccentColor = Color3.fromRGB(120, 200, 255)
    }
}

local activeNotifications = {}
local notificationQueue = {}

local function createNotification(data)
    local theme = themes[data.theme] or themes.info
    local baseZIndex = #activeNotifications * 10 + 100

    local notif = Instance.new("Frame")
    notif.Name = "Notification"
    notif.BackgroundTransparency = 1
    notif.Size = UDim2.new(1, 0, 0, 0)
    notif.AutomaticSize = Enum.AutomaticSize.Y
    notif.LayoutOrder = -os.clock()
    notif.ZIndex = baseZIndex
    notif.Position = UDim2.new(0, 0, 0, 0)

    Instance.new("UICorner", notif).CornerRadius = UDim.new(0, 12)

    local container = Instance.new("Frame", notif)
    container.Name = "Container"
    container.BackgroundColor3 = Color3.new(0, 0, 0)
    container.BackgroundTransparency = 0
    container.Size = UDim2.new(1, 0, 0, 0)
    container.AutomaticSize = Enum.AutomaticSize.Y
    container.ZIndex = baseZIndex
    container.BorderSizePixel = 0

    local glow = Instance.new("UIStroke", container)
    glow.Color = theme.Color
    glow.Thickness = 2
    glow.Transparency = 0.5
    glow.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

    Instance.new("UICorner", container).CornerRadius = UDim.new(0, 12)

    local shadow = Instance.new("ImageLabel", container)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageTransparency = 0.8
    shadow.Size = UDim2.new(1, 12, 1, 12)
    shadow.Position = UDim2.new(0, -6, 0, -6)
    shadow.ZIndex = baseZIndex - 1
    shadow.BackgroundTransparency = 1
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)

    local icon = Instance.new("ImageLabel", container)
    icon.Image = theme.Icon
    icon.Size = UDim2.new(0, 24, 0, 24)
    icon.Position = UDim2.new(0, 12, 0, 12)
    icon.BackgroundTransparency = 1
    icon.ImageColor3 = theme.Color
    icon.ZIndex = baseZIndex + 1

    local title = Instance.new("TextLabel", container)
    title.Text = data.title
    title.TextColor3 = theme.TextColor
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.TextTransparency = 1
    title.BackgroundTransparency = 1
    title.Position = UDim2.new(0, 44, 0, 10)
    title.Size = UDim2.new(1, -60, 0, 20)
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.ZIndex = baseZIndex + 1

    local message = Instance.new("TextLabel", container)
    message.Text = data.message
    message.TextColor3 = Color3.fromRGB(230, 230, 230)
    message.Font = Enum.Font.Gotham
    message.TextSize = 14
    message.TextTransparency = 1
    message.BackgroundTransparency = 1
    message.Position = UDim2.new(0, 44, 0, 30)
    message.Size = UDim2.new(1, -60, 0, 0)
    message.AutomaticSize = Enum.AutomaticSize.Y
    message.TextWrapped = true
    message.TextXAlignment = Enum.TextXAlignment.Left
    message.ZIndex = baseZIndex + 1

    local progress = Instance.new("Frame", container)
    progress.Name = "Progress"
    progress.BackgroundColor3 = theme.Color
    progress.BorderSizePixel = 0
    progress.Position = UDim2.new(0, 3, 1, -6)
    progress.Size = UDim2.new(1, 0, 0, 5)
    progress.ZIndex = baseZIndex + 2

    local progressCorner = Instance.new("UICorner", progress)
    progressCorner.CornerRadius = UDim.new(0, 12)

    notif.Parent = holder

    TweenService:Create(title, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
    TweenService:Create(message, TweenInfo.new(0.3), {TextTransparency = 0.2}):Play()
    TweenService:Create(container, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(1, 0, 0, 70)
    }):Play()

    TweenService:Create(progress, TweenInfo.new(data.duration, Enum.EasingStyle.Linear), {
        Size = UDim2.new(0, 0, 0, 5)
    }):Play()

    table.insert(activeNotifications, { Instance = notif })

    task.delay(data.duration, function()
        if notif and notif.Parent then
            -- Animate slide out to left
            TweenService:Create(title, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {TextTransparency = 1}):Play()
            TweenService:Create(message, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {TextTransparency = 1}):Play()
            TweenService:Create(icon, TweenInfo.new(0.4), {ImageTransparency = 1}):Play()
            TweenService:Create(glow, TweenInfo.new(0.4), {Transparency = 1}):Play()
            TweenService:Create(progress, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()

            TweenService:Create(container, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
    Position = UDim2.new(1, 0, container.Position.Y.Scale, container.Position.Y.Offset),
    Size = UDim2.new(1, 0, 0, 70)
}):Play()

            task.wait(0.45)
            notif:Destroy()
        end
    end)
end

function notify(title, message, theme, duration)
    table.insert(notificationQueue, {
        title = title,
        message = message,
        theme = theme or "info",
        duration = duration or 4
    })
end

RunService.Heartbeat:Connect(function()
    if #notificationQueue > 0 then
        local nextNotif = table.remove(notificationQueue, 1)
        createNotification(nextNotif)
    end
end)

-- Example Usage
-- Notification Function (Assumed Already Exists)
-- notify("Title", "Description", "success/info/warning/error", duration)







-- Key system






notify("Warning", "You Need To Be Whilsted For Key To Work!", "warning", 5)
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local Lighting = game:GetService("Lighting")
local player = Players.LocalPlayer

local usedKeys = {}
local validKeys = {
	["SwighttThe#1"] = true
}

local whitelist = {
	[3265066737] = true, -- You
	[7179752539] = true,  -- 3amil 1
	[5690313050] = true, -- Youri
	[9104986215] = true,  -- youri
	[7497751545] = true  -- 3amil 2
}

local blur = Instance.new("BlurEffect")
blur.Size = 24
blur.Parent = Lighting

local screenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
screenGui.Name = "KeySystem"
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.Size = UDim2.new(0, 323, 0, 202) -- Increased size by 1%
frame.BackgroundTransparency = 1

local container = Instance.new("Frame", frame)
container.AnchorPoint = Vector2.new(0.5, 0.5)
container.Position = UDim2.new(0.5, 0, 0.6, 0)
container.Size = UDim2.new(1, 0, 1, 0)
container.BackgroundColor3 = Color3.fromRGB(45, 0, 90)
container.BackgroundTransparency = 1
container.BorderSizePixel = 0
Instance.new("UICorner", container).CornerRadius = UDim.new(0, 12)

local stroke = Instance.new("UIStroke", container)
stroke.Thickness = 3
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

task.spawn(function()
	while screenGui.Parent do
		local t = tick()
		local r = math.sin(t * 2) * 127 + 128
		local g = math.sin(t * 2 + 2) * 127 + 128
		local b = math.sin(t * 2 + 4) * 127 + 128
		stroke.Color = Color3.fromRGB(r, g, b)
		task.wait(0.05)
	end
end)

notify("New Updated Version!", "Version 2 is now available with new Features!", "info", 3)

local title = Instance.new("TextLabel", container)
title.Text = "Twilight Hub Key System"
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(220, 200, 255)
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextTransparency = 1

local input = Instance.new("TextBox", container)
input.PlaceholderText = "Enter Key Here"
input.Size = UDim2.new(0.85, 0, 0, 35)
input.Position = UDim2.new(0.075, 0, 0, 60)
input.BackgroundColor3 = Color3.fromRGB(70, 0, 130)
input.TextColor3 = Color3.fromRGB(230, 230, 255)
input.TextSize = 16
input.Font = Enum.Font.Gotham
input.Text = ""
input.ClearTextOnFocus = false
input.TextTransparency = 1
Instance.new("UICorner", input).CornerRadius = UDim.new(0, 8)

local info = Instance.new("TextLabel", container)
info.Text = "Contact The Owner (Swight) To Get Whitelisted\nDc: swightx2"
info.Size = UDim2.new(0.9, 0, 0, 40) -- increase height to fit 2 lines
info.Position = UDim2.new(0.05, 0, 0, 100)
info.BackgroundTransparency = 1
info.TextColor3 = Color3.fromRGB(180, 150, 255)
info.Font = Enum.Font.Gotham
info.TextSize = 14
info.TextXAlignment = Enum.TextXAlignment.Left
info.TextYAlignment = Enum.TextYAlignment.Top -- optional: aligns the text to the top
info.TextTransparency = 1

local submit = Instance.new("TextButton", container)
submit.Size = UDim2.new(0.9, 0, 0, 35)
submit.Position = UDim2.new(0.05, 0, 1, -50)
submit.Text = "Submit"
submit.BackgroundColor3 = Color3.fromRGB(128, 0, 255)
submit.TextColor3 = Color3.fromRGB(255, 255, 255)
submit.Font = Enum.Font.GothamBold
submit.TextSize = 16
submit.BackgroundTransparency = 1
submit.TextTransparency = 1
Instance.new("UICorner", submit).CornerRadius = UDim.new(0, 8)

local duration = 0.5
local targetPosition = UDim2.new(0.5, 0, 0.5, 0)
local startPosition = UDim2.new(0.5, 0, 0.6, 0)

local function fadeIn()
	local tweens = {
		TweenService:Create(container, TweenInfo.new(duration), {BackgroundTransparency = 0, Position = targetPosition}),
		TweenService:Create(title, TweenInfo.new(duration), {TextTransparency = 0}),
		TweenService:Create(input, TweenInfo.new(duration), {TextTransparency = 0}),
		TweenService:Create(info, TweenInfo.new(duration), {TextTransparency = 0}),
		TweenService:Create(submit, TweenInfo.new(duration), {BackgroundTransparency = 0, TextTransparency = 0}),
	}
	for _, t in ipairs(tweens) do t:Play() end
end

local function fadeOut()
	local tweens = {
		TweenService:Create(container, TweenInfo.new(duration), {BackgroundTransparency = 1, Position = startPosition}),
		TweenService:Create(title, TweenInfo.new(duration), {TextTransparency = 1}),
		TweenService:Create(input, TweenInfo.new(duration), {TextTransparency = 1}),
		TweenService:Create(info, TweenInfo.new(duration), {TextTransparency = 1}),
		TweenService:Create(submit, TweenInfo.new(duration), {BackgroundTransparency = 1, TextTransparency = 1}),
	}
	for _, t in ipairs(tweens) do t:Play() end
	tweens[1].Completed:Wait()
end

fadeIn()

-- YOUR notify function assumed to exist somewhere above or globally:
-- notify(title, message, type, duration)

submit.MouseButton1Click:Connect(function()
	local userKey = input.Text
	local userId = player.UserId

	if usedKeys[userId] then
		input.Text = ""
		input.PlaceholderText = "❌ You already used a key"
		input.PlaceholderColor3 = Color3.fromRGB(255, 100, 100)
		notify("Oops!", "You already used a key.", "error", 5)
		return
	end

	if validKeys[userKey] then
		if whitelist[userId] then
			usedKeys[userId] = true
			validKeys[userKey] = nil

			input.Text = ""
			input.PlaceholderText = "✅ Correct key. You are whitelisted."
			input.PlaceholderColor3 = Color3.fromRGB(100, 255, 100)
			notify("✅ Correct Key!", "You're Whitelisted! Welcome!", "success", 1)

			task.wait(1)
			

			fadeOut()
			blur:Destroy()
			screenGui:Destroy()
			
			task.wait(1)
			loadstring(game:HttpGet("https://raw.githubusercontent.com/lm9awd8103/lm9awd8103/refs/heads/main/real%20almost.txt"))()
			
			print("✅ Correct! Whitelisted. Welcome!")
		else
			input.Text = ""
			input.PlaceholderText = "❌ You're not whitelisted"
			input.PlaceholderColor3 = Color3.fromRGB(255, 100, 100)
			notify("Warning", "You're not whitelisted.", "warning", 5)
		end
	else
		input.Text = ""
		input.PlaceholderText = "❌ Invalid key"
		input.PlaceholderColor3 = Color3.fromRGB(255, 100, 100)
		notify("Oops!", "Invalid key.", "error", 5)
	end
end)
